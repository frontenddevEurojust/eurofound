<?php

/***
* EFW2C 2015
* ---------------------------------
* The ef_contents2word module file
*
*/

//-----------------------------------------------
//module_load_include('inc', 'zip_archive', 'zip_archive.class');
module_load_include('inc', 'ef_contents2word', 'ef_contents2word.functions');

function ef_contents2word_menu() {
  $items = array();

  $theme_default = variable_get('theme_default');

  $items['node/%node/d2w'] = array(
    'title' => 'Downloading format',
	'theme callback' => '_ef_contents2word_node_custom_theme',
    //'access callback' => 'user_access',
    'access callback' => '_ef_contents2word_d2w_access',
    'access arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ef_contents2word_d2w_form'),
	'theme callback' => $theme_default,
    'weight' => 0,
    'type' => MENU_CALLBACK,
  );
  $items['node/%node/revisions/%vid/d2w'] = array(
    'title' => 'Downloading format',
	'theme callback' => '_ef_contents2word_node_custom_theme',
    //'access callback' => 'user_access',
    'access callback' => '_ef_contents2word_d2w_access',
    'access arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ef_contents2word_d2w_form'),
	'theme callback' => $theme_default,
    'weight' => 0,
    'type' => MENU_CALLBACK ,
  );

  $items['node/%node/d2w-related-contributions'] = array(
    'title' => 'Downloading format',
	'theme callback' => '_ef_contents2word_node_custom_theme',
    //'access callback' => 'user_access',
    'access callback' => '_ef_contents2word_d2w_related_contributions_access',
    'access arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ef_contents2word_d2w_related_contributions_form'),
	'theme callback' => $theme_default,
    'weight' => 0,
    'type' => MENU_CALLBACK,
  );
  $items['node/%node/revisions/%vid/d2w-related-contributions'] = array(
    'title' => 'Downloading format',
	'theme callback' => '_ef_contents2word_node_custom_theme',
    //'access callback' => 'user_access',
    'access callback' => '_ef_contents2word_d2w_related_contributions_access',
    'access arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ef_contents2word_d2w_related_contributions_form'),
 	'theme callback' => $theme_default,
   'weight' => 0,
    'type' => MENU_CALLBACK ,
  );

  return $items;

}

function ef_contents2word_d2w_form($form, &$form_state) {
  $form['downloading_format'] = array(
    '#markup' => '<p>Please, choose one downloading format:</p>',
  );
  $form['one_word']=array(
    '#type'=>'submit',
    '#value'=>t('One Word file'),
  );
  $form['multiple_word']=array(
    '#type'=>'submit',
    '#value'=>t('Multiple Word files'),
  );
  if(isset($_SERVER['HTTP_REFERER'])){
	  $form['downloading_cancel'] = array(
		'#markup' => '<a class="btn" href="'.$_SERVER['HTTP_REFERER'].'">'.t('Cancel').'</a>',
	  );
  }
  return $form;

}

function ef_contents2word_d2w_related_contributions_form($form, &$form_state) {
  $form['downloading_format'] = array(
    '#markup' => '<p>Please, choose one downloading format:</p>',
  );
  $form['one_word']=array(
    '#type'=>'submit',
    '#value'=>t('One Word file'),
  );
  $form['multiple_word']=array(
    '#type'=>'submit',
    '#value'=>t('Multiple Word files'),
  );
  if(isset($_SERVER['HTTP_REFERER'])){
	  $form['downloading_cancel'] = array(
		'#markup' => '<a class="btn" href="'.$_SERVER['HTTP_REFERER'].'">'.t('Cancel').'</a>',
	  );
  }

  return $form;

}

function ef_contents2word_d2w_form_submit(&$form, &$form_state) {
	$nid = arg(1);
	$node = node_load($nid);

	switch($form_state['clicked_button']['#id']){
		case 'edit-one-word':
			_ef_contents2word_d2w_all_revisions_one_word($form, $form_state, $node);
		break;
		case 'edit-multiple-word':
			_ef_contents2word_d2w_all_revisions_zip($form, $form_state, $node);
		break;

	}
}

function ef_contents2word_d2w_related_contributions_form_submit(&$form, &$form_state) {

	$nid = arg(1);
	$vid = arg(3);
	$node = node_load($nid,$vid);

	switch($form_state['clicked_button']['#id']){
		case 'edit-one-word':
			_ef_contents2word_d2w_related_contributions_one_word($form, $form_state, $node);
		break;
		case 'edit-multiple-word':
			_ef_contents2word_d2w_related_contributions_zip($form, $form_state, $node);
		break;

	}
}

function _ef_contents2word_d2w_access ($node) {
	if (($node->type == 'ef_ic_quarterly_report') || ($node->type == 'ef_national_contribution') || ($node->type == 'ef_network_quarterly_report')) $access = true;
	else $access = false;
	$access = $access && (user_access('export to word') );

  return $access;

}
function _ef_contents2word_d2w_related_contributions_access ($node) {
	if ($node->type == 'ef_national_contribution') $access = true;
	else $access = false;
	$access = $access && (user_access('export to word') );

  return $access;

}

function ef_contents2word_form_alter(&$form, &$form_state, $form_id) {
	drupal_add_js(drupal_get_path('module', 'ef_contents2word') . '/ef_contents2word.js');


  if (isset($form['type']['#value']) && $form ['type']['#value'] . '_node_form' == $form_id) {

	if ((arg(2) == 'edit') || ((arg(2) == 'revisions') && (arg(4) == 'edit'))){

		$form['actions']['d2w'] = array(
		 '#type' => 'submit',
		 '#value' => t('Export to Word'),
		 '#callback' => '_ef_contents2word_d2w_callback',
		 '#weight' => 7,
		 '#validate' => array('_ef_contents2word_form_no_validation'),
		);
		$form['actions']['d2w_all_revisions'] = array(
		 '#type' => 'submit',
		 '#value' => t('Export all Revisions'),
		 '#callback' => '_ef_contents2word_d2w_callback',
		 '#weight' => 8,
		 '#validate' => array('_ef_contents2word_form_no_validation'),
		);

		$form['actions']['d2w_related_contributions'] = array(
		 '#type' => 'submit',
		 '#value' => t('Export related Contributions'),
		 '#callback' => '_ef_contents2word_d2w_callback',
		 '#weight' => 8,
		 '#validate' => array('_ef_contents2word_form_no_validation'),
		);
		if($form_state['node']->type != 'ef_national_contribution'){
			$form['actions']['d2w_related_contributions']['#access'] = FALSE;
		}

	    if (($form ['type']['#value'] == 'ef_ic_quarterly_report') || ($form ['type']['#value'] == 'ef_national_contribution') || ($form ['type']['#value'] == 'ef_network_quarterly_report')) $access = true;
	    else $access = false;
	    $access = $access && (user_access('export to word') );
		$form['actions']['d2w']['#access'] = $access;
		$form['actions']['d2w_all_revisions']['#access'] = $access;


		$form['#submit'] = array('_ef_contents2word_d2w_callback');

	}

  }

  //if (($form_id == 'views_form_national_contributions_export_page') || ($form_id == 'views_form_ef_network_quarterly_reports_export_page')) $form['#after_build'][] = 'views_bulk_operations_d2w_after_build';
}

function _ef_contents2word_d2w_callback(&$form, &$form_state) {
	$nid = arg(1);
	$vid = arg(3);
	$node = node_load($nid,$vid);

	switch($form_state['clicked_button']['#id']){
		case 'edit-d2w':
			/* Export to word: */
			_ef_contents2word_d2w_simple_word($form, $form_state, $node);
		break;
		case 'edit-d2w-all-revisions':
			/* Export all revisions: */
			_ef_contents2word_d2w_all_revisions($form, $form_state, $node);
		break;
		case 'edit-d2w-related-contributions':
			/* Export related contributions: */
			_ef_contents2word_d2w_related_contributions($form, $form_state, $node);
		break;
	}
}

function _ef_contents2word_form_no_validation($form, &$form_state) {
}

function ef_contents2word_permission() {
  return array(
    'export to word' => array(
      'title' => t('Export node contents to word files'),
      'description' => t(''),
    ),
  );
}


/* Views Bulk Operations: */
/**
 *
 */

function ef_contents2word_action_info() {
 $actions = array();
    $actions['views_bulk_operations_d2w_action'] = array(
      'type' => 'node',
      'label' => t('Export to Word'),
      'configurable' => TRUE,
    );
    $actions['views_bulk_operations_d2w_all_revisions_action'] = array(
      'type' => 'node',
      'label' => t('Export all Revisions'),
      'configurable' => TRUE,
    );
    $actions['views_bulk_operations_d2w_related_contributions_action'] = array(
      'type' => 'node',
      'label' => t('Export related Contributions'),
      'configurable' => TRUE,
    );
  return $actions;
}

function views_bulk_operations_d2w_action_form($context) {
	/* Export to word button: */
  $form = array();
  if ((count($_POST['views_bulk_operations_1']) == 1) || (count($_POST['views_bulk_operations']) == 1)){ // only one checked item
	  $form['choice']=array(
		'#type'=>'hidden',
		'#default_value' => 0,
	  );
	  $form['confirmtext']=array(
		'#type'=>'markup',
		'#markup'=>t('<p>Do you want to confirm the export of the selected content to a Word file?</p>'),
	  );
  }
  else {
	$form['choice']=array(
			'#type'=>'radios',
			'#options' => array(
				t('One Word file'),
				t('Multiple Word files'),
				),
			'#default_value' => 0,
			'#title'=>t('Please, choose one downloading format:'),
		  );
  }
  return $form;
}

function views_bulk_operations_d2w_action_submit($form, $form_state) {
  return array('choice' => $form_state['values']['choice']);
}

function views_bulk_operations_d2w_action($node, $context = array()) {
  if (isset($context['choice'])) {
	if($context['progress']['total'] > 0){
		// There are selected items
		//dsm($context);
		$context_filter_names = unserialize($context['view_info']['exposed_input']['field_names']);
		if($context['choice'] == 0) _ef_contents2word_d2w_all_selected_one_word_batch($node,$context['progress']['current'],$context['progress']['total'],$context['view_info']['exposed_input']['dynamic-field'],$context_filter_names);
		else if($context['choice'] == 1) _ef_contents2word_d2w_all_selected_zip_batch($node,$context['progress']['current'],$context['progress']['total'],$context['view_info']['exposed_input']['dynamic-field'],$context_filter_names);
	}

  }
}
function views_bulk_operations_d2w_after_build($form, &$form_state){
  // Set a submit handler in this spot in the form state.
  $form_state['triggering_element']['#submit'][] = 'views_bulk_operations_d2w_redirect';

  return $form;
}
function views_bulk_operations_d2w_redirect(&$form, &$form_state){
  // Set your redirect logic here and set $form_state['redirect']['path'].
  //if(isset($form_state['redirect'][0])) unset($form_state['redirect'][0]); // we clean parameters of url
  //if($form['form_id']['#value']== 'views_form_national_contributions_export_page') $form_state['redirect']['path'] = 'national-contributions-export';
  //else if($form['form_id']['#value']== 'views_form_ef_network_quarterly_reports_export_page') $form_state['redirect']['path'] = 'quarterly-reports-export';
}
function views_bulk_operations_d2w_all_revisions_action_form($context) {
  $form = array();
  $form['choice']=array(
    '#type'=>'radios',
    '#options' => array(
		t('One Word file'),
		t('Multiple Word files'),
		),
	'#default_value' => 0,
    '#title'=>t('Please, choose one downloading format:'),
  );

  return $form;
}

function views_bulk_operations_d2w_all_revisions_action_submit($form, $form_state) {
  return array('choice' => $form_state['values']['choice']);
}
function views_bulk_operations_d2w_all_revisions_action($node, $context = array()) {
  if (isset($context['choice'])) {
	if($context['progress']['total'] > 0){
		// There are selected items
		$context_filter_names = unserialize($context['view_info']['exposed_input']['field_names']);
		if($context['choice'] == 0) _ef_contents2word_d2w_all_revisions_one_word_batch($node,$context['progress']['current'],$context['progress']['total'],$context['view_info']['exposed_input']['dynamic-field'],$context_filter_names);
		else if($context['choice'] == 1) _ef_contents2word_d2w_all_revisions_zip_batch($node,$context['progress']['current'],$context['progress']['total'],$context['view_info']['exposed_input']['dynamic-field'],$context_filter_names);

	}
  }
}


function views_bulk_operations_d2w_related_contributions_action_form($context) {
  $form = array();
  $form['choice']=array(
    '#type'=>'radios',
    '#options' => array(
		t('One Word file'),
		t('Multiple Word files'),
		),
	'#default_value' => 0,
    '#title'=>t('Please, choose one downloading format:'),
  );

  return $form;
}

function views_bulk_operations_d2w_related_contributions_action_submit($form, $form_state) {

  return array('choice' => $form_state['values']['choice']);
}
function views_bulk_operations_d2w_related_contributions_action($node, $context = array()) {


  if (isset($context['choice'])) {
	if($context['progress']['total'] > 0){
		// There are selected items
		if($context['choice'] == 0) _ef_contents2word_d2w_related_contributions_one_word_batch($node,$context['progress']['current'],$context['progress']['total']);
		else if($context['choice'] == 1) _ef_contents2word_d2w_related_contributions_zip_batch($node,$context['progress']['current'],$context['progress']['total']);

	}

  }
}

function ef_contents2word_views_pre_render(&$view) {
	if (($view->name == 'national_contributions_export') || ($view->name == 'ef_network_quarterly_reports_export')){
		foreach ($view->field as $field_name => $value){

			if ($field_name == 'title') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'type') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'field_ef_quartely_report_year-revision_id') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'field_ef_quarter-revision_id') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'name') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'state') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'last_editor') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'timestamp') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'views_bulk_operations_1') $view->field[$field_name]->options['exclude'] = false;
			else if ($field_name == 'views_bulk_operations') $view->field[$field_name]->options['exclude'] = false;
			else $view->field[$field_name]->options['exclude'] = true;


		}
	}

}
