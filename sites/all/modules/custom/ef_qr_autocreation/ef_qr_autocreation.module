<?php

function ef_qr_autocreation_permission() {
  return array(
    'QR autocreation' => array(
      'title' => t('Access to qr-autocreation page'),
      'description' => t('Allow access to qr_autocreation'),
    ),
  );
}


/**
 * Implementation of hook_menu().
 */
function ef_qr_autocreation_menu() {
  $items = array();
  $items['qr-autocreation'] = array(
    'title' => 'Quarterly Reports Auto-creation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('qr_autocreation_form'),
    'access arguments' => array('QR autocreation'),
  );

  return $items;
}

function qr_autocreation_form($form, &$form_submit) {
	$form = array();
	$contentTypeList=array('' => t('Please select'),'ef_ic_quarterly_report'=>'IC quarterly report','ef_network_quarterly_report'=>'Network quarterly report');
	$form['content_type'] = array(
	 '#type' => 'select',
	 '#title' => t('Content Type'),
	 '#options' => $contentTypeList,
	 '#required' => TRUE,
	);

	$form['scheduled_record_delivery_date'] = array(
	 '#type' => 'date_popup',
	 '#title' => t('Scheduled Record Delivery Date'),
	 '#date_format' => 'Y/m/d',
	 '#default_value' => date('YYYY/mm/dd'),
	 '#date_label_position' => 'within',
	 '#datepicker_options' => array(
    	'minDate' => 0, //Disable the days previous to the current date
  	 ),
	 '#required' => TRUE,
	);

	$form['year'] = array(
	 '#type' => 'date_select',
	 '#title' => t('Year'),
	 '#default_value' => date('Y'),
	 '#date_format' => 'Y',
	 '#required' => TRUE,
	 '#date_label_position' => 'within', // See other available attributes and what they do in date_api_elements.inc
	 '#date_year_range' => '-0:+3', // Optional, used to set the year range (back 3 years and forward 3 years is the default).
	);

	$quarterList=array('' => t('Please select'),'Q1'=>'Q1','Q2'=>'Q2','Q3'=>'Q3','Q4'=>'Q4');
	$form['quarter'] = array(
	 '#type' => 'select',
	 '#title' => t('Quarter'),
	 '#options' => $quarterList,
	 '#required' => TRUE,
	);

	$result  = db_query('select c.iso2,name from {field_data_field_ef_eu_member} m inner join {countries_country} c on c.cid=m.entity_id');
	foreach ($result as $record) {
	  $countriesList[$record->iso2] = $record->name;
	}

	//Added by BM
	//Remove EU Member States option
	unset($countriesList['EM']);
	unset($countriesList['TR']);


	$form['country'] = array(
	 '#type' => 'select',
	 '#title' => t('Countries'),
	 '#options' => $countriesList,
	 '#required' => TRUE,
	 '#multiple' => TRUE,
	);

	$form['file1'] = array(
	    '#type' => 'file',
	    '#title' => t('Document only for Network quarterly reports'),
	    '#upload_location' => 'public://ef_network_quarterly_report/field_ef_document/',
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => 'Submit',
	);

	return $form;
}

function qr_autocreation_form_validate($form, &$form_state) {
		//   txt pdf doc docx xls xlsx ppt pptx.
		//   10 MB.
		// File validation
		$allowed_types = array("pdf","txt","doc","docx","xls","xlsx","ppt","pptx");

		if($form_state['values']['file1']!=''){
			$file_name = $form_state['values']['file1']['name'];
			$file_size = $form_state['values']['file1']['size'];
			$file_type = explode(".",$file_name);
			$file_type_extension = array_pop($file_type);
			if(!in_array($file_type_extension, $allowed_types)){
			   form_set_error('file1', 'Please provide a file with one of these extensions pdf , txt , doc , docx , xlx , xlsx , ppt , pptx.');
	    	   $form_state['rebuild'] = TRUE;
			}
			if($file_size>256000000){
			   form_set_error('file1', 'File must be below 10MB.');
			   $form_state['rebuild'] = TRUE;
			}
			//I upload the file with file_save upload
			$file = file_save_upload('file1', array());
			if ($file){
	            // Move the file into the Drupal file system.
	            if ($file = file_move($file, 'public://ef_network_quarterly_report/field_ef_document', FILE_EXISTS_RENAME)) {
	            // Save the file for use in the submit handler.
	            $form_state['storage']['file1'] = $file;
				}
			    else
				{
				   form_set_error('file1', t("Failed to write the uploaded file to the site's file folder."));
			    }
		    }
	    	else{
	        	form_set_error('file1', t('No file was uploaded.'));
	    	}


		}



}

function qr_autocreation_form_submit($form, &$form_state){
	  global $user;
	  foreach($form_state['values']['country'] as $country){

		  $query = new EntityFieldQuery;
			$query->entityCondition('entity_type', 'node')
			  ->entityCondition('bundle', $form_state['values']['content_type'])
			  ->fieldCondition('field_ef_quarter_report_country', 'iso2', $country, '=')
			  ->fieldCondition('field_ef_quartely_report_year', 'value', $form_state['values']['year']. '%', 'like')
			  ->fieldCondition('field_ef_quarter', 'value', $form_state['values']['quarter'], '=');
			$results = $query->execute();

			if (isset($results['node'])) {
				drupal_set_message( "Node of content type " . $form_state['values']['content_type'] . " for ". $form_state['values']['year']."-".$form_state['values']['quarter']."-".$country." already exists", 'error');
				continue;
			}
		  $node = new stdClass();
		  if($country != 'GB'){
		  	$node->title = "Title for ".$form_state['values']['quarter']."-".$form_state['values']['year']."-".$country;
		  }else{
		  	$node->title = "Title for ".$form_state['values']['quarter']."-".$form_state['values']['year']."-UK";
		  }
		  $node->type = $form_state['values']['content_type'];
		  node_object_prepare($node);
		  $node->uid = $user->uid;
		  $node->field_ef_quarter_report_country['und'][]['iso2']=$country;
		  $node->field_ef_quarter['und'][]['value']=$form_state['values']['quarter'];
		  $node->field_ef_quartely_report_year['und'][]['value']=date("Y-m-d", mktime(0, 0, 0, 1, 1, $form_state['values']['year']));
		  if (isset($form_state['values']['scheduled_record_delivery_date'])){
		  	$node->field_ef_report_delivery_date['und'][]['value']=date("Y-m-d", strtotime($form_state['values']['scheduled_record_delivery_date']));
		  }
		  $node->status = 0;
		  $node->promote = 0;

		  $select = "SELECT b.name
								 FROM countries_country b
								 WHERE b.iso2 = :country";
			$country_name = db_query($select,array(':country' => $country))->fetchAll();


		  if($form_state['values']['content_type']=='ef_network_quarterly_report'){
		      if(isset($form_state['storage']['file1'])){
		      $file1 = $form_state['storage']['file1'];
		      // We are done with the file, remove it from storage.
		      unset($form_state['storage']['file1']);
		      // Make the storage of the file permanent.
		      $file1->status = FILE_STATUS_PERMANENT;
		      // Save file status.
		      file_save($file1);
		      $file1->display = 1;
		      $file1->description = "";
	       $node->field_ef_document['en'][0]=(array)$file1;
		   }
		  }
		  $group = group_load_by_name($country_name[0]->name);
		  $node = node_contract($node,$group);

		  $node = node_submit($node); // Prepare node for saving
		  node_save($node);
		  drupal_set_message( "Node: '" . $node->title. "' saved!\n");

	  }

}

function ef_qr_autocreation_node_presave($node) {
	$path=drupal_get_destination();
	if(isset($path['destination'])){
	$pos = strpos($path['destination'], "index?action=migrate");
		if ($pos !== false) {
			$node->changed=$node->created;
			$node->timestamp=$node->created;
		}
	}
}
