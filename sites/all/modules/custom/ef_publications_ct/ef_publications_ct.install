<?php

/*
 * Updates the URLs of old EF Articles, Comparative Analytical Reports and National Contributions
 * The ones with the EurWORK observatory will be updated
 */
function ef_publications_ct_update_7201()
{
	$observatory = "EurWORK";

	// Launch the select to get the taxonomy tid
	$query = db_select('taxonomy_term_data', 't');
	$query->fields('t', array("tid"));
	$query->condition('t.name', $observatory, "=");
	$result=$query->execute();

	// Get the taxonomy id for the EurWORK term
	$tid = 0;
	while ($record = $result->fetchAssoc())
	{
		// The query has results, save the tid 
		$tid = $record['tid'];
	}

	if ($tid && is_numeric($tid))
	{
		$concat = "url.source=CONCAT('node/', n.nid)";
		// Launch the new select to get the IDs of the nodes with the old URL
		$query = db_select('node', 'n');
		$query->join('field_data_field_ef_observatory', 'o', 'n.nid = o.entity_id');
		$query->join('url_alias', 'url', $concat);
		$query->join('publication_date', 'p', 'p.nid=n.nid');
		$query->distinct();
		$query->fields('n', array("nid", "title", "type"));
		$query->fields('url', array("source", "alias"));
		$query->fields('p',array("published_at"));
		$query->condition('o.field_ef_observatory_tid', $tid, "=");
		$query->condition('n.status', 1, '=');
		$query->condition('n.type', array("ef_report", "ef_comparative_analytical_report","ef_national_contribution"), 'IN');

		$result = $query->execute();

		// Include the pathauto module
		module_load_include('inc', 'pathauto');

		// Array for the URL redirects
		$redirects = array();

		// Read the rows returned by the SELECT
		while ($record = $result->fetchAssoc())
		{
			// Get the year when the node was published
			$year = date('Y', $record['published_at']);

			// Change the title to make it URL-friendly
			$title = pathauto_cleanstring($record['title']);

			$pathPrefix = "";

			// Prefix for the URL
			if ($record['type'] == 'ef_national_contribution' || $record['type'] == 'ef_comparative_analytical_report')
			{
				$pathPrefix = 'publications/reports/';
			}
			else if ($record['type'] == 'ef_report')
			{
				$pathPrefix = 'publications/article/';
			}

			if ($pathPrefix != "")
			{
				$path = $pathPrefix . $year .'/' . $title;

				// Check if it exists an alias with the current $path value
				if(_pathauto_alias_exists($path, $record['source']))
				{
					// If the current path already exists, add a number at the end to make it different
					$i = 0;
					while ((_pathauto_alias_exists($path, $record['source'])))
					{
						$path = $pathPrefix . $year . '/' . $title . '-' . $i;
						$i++;
					}
				}

				// Update the current URL for the node on the database
				db_update('url_alias')
					->fields(array('alias' => $path))
					->condition('alias', $record['alias'], '=')
					->execute();

				$urlData = new stdClass();
				$urlData->nid = $record['nid'];
				$urlData->oldURL = $record['alias'];
				$urlData->newURL = $path;

				// Add the new redirects to the Database

				// Load the system languages list
				$languages = language_list();

				foreach ($languages as $language)
				{
					// Create a redirect objct for each language
					$redirect = new stdClass();
					redirect_object_prepare($redirect);
					$redirect->source = $urlData->oldURL;
					$redirect->redirect = $urlData->newURL;
					$redirect->language = $language->language;

					// Get the hash for the created redirect object
					$hash = redirect_hash($redirect);

					// Check if the hash for the redirect object already exists
					$exists = redirect_load_by_hash($hash);
					if (!$exists)
					{
						// If there is no value for the hash, save the redirect
						redirect_save($redirect);
					}
				}
			}
		}
	}
}